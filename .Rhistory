View(daily_SPEC_2018)
unique(daily_SPEC_2018$`Parameter Name`)
View(fit)
expression(m^3)
print(expression(m^3))
plot(1~1)
title(expression(m^3))
paste0("Estimated ", sp, " (ug/",expression(m^3),")")
sp="pm25"
paste0("Estimated ", sp, " (ug/",expression(m^3),")")
library(ggplot2)
library(ggpmisc)
library(cowplot)
library(viridis)
library(ggpointdensity)
get_density <- function(x, y, ...) {
dens <- MASS::kde2d(x, y, ...)
ix <- findInterval(x, dens$x)
iy <- findInterval(y, dens$y)
ii <- cbind(ix, iy)
return(dens$z[ii])
}
species<-c('pm25_sulfate','pm25_nitrate','pm25_oc','pm25_ec', 'pm25_dust')
moni<-read.csv('F:/Emory/LiuGroup/WRF/Monitor Data/PM25_monitor_data_original/monitor_wrf_pm25species_2018_model.csv')
moni$doy <- as.numeric(as.Date(moni$date)-as.Date("2018-01-01"))+1
daylist <- as.data.frame(table(moni$doy))
daylist.sub <- subset(daylist,daylist$Freq>1)
moni.subset <- subset(moni,moni$doy %in% daylist.sub$Var1)
#moni.subset <- moni.subset[which(moni.subset$month %in% c(6,7,8)),]
moni.subset <- moni.subset[complete.cases(moni.subset),]
wrf_lalo<-unique(moni.subset[c("wrf_lon","wrf_lat")])
wrf_lalo<-wrf_lalo[order(wrf_lalo$wrf_lon,wrf_lalo$wrf_lat), ]
wrf_loc <- data.frame(wrf_lalo, wrf_id=seq(1,nrow(wrf_lalo)))
moni.subset<-merge(moni.subset, wrf_loc, by=c("wrf_lon","wrf_lat"),all.x=TRUE,all.y=FALSE)
moni_lalo <- unique(moni.subset[c("monitor_lon","monitor_lat")])
moni_lalo <- moni_lalo[order(moni_lalo$monitor_lon,moni_lalo$monitor_lat),]
mon_loc <- data.frame(moni_lalo,mon_id=seq(1,nrow(moni_lalo)))
moni.subset <- merge(moni.subset, mon_loc, by=c("monitor_lon","monitor_lat"),all.x=TRUE,all.y=FALSE)
moni.subset <- moni.subset[order(moni.subset$doy, moni.subset$wrf_id, moni.subset$mon_id),]
plot_list<-list()
for (i in 1:5){
sp<-species[i]
load(paste0("F:/Emory/LiuGroup/WRF/Model fit/FitWRF_",sp,".RData"))
print(sp)
moni_pm<-paste0('moni_',sp)
Y = moni.subset[,moni_pm]
maxY<-max(Y)
maxFitY<-max(fit$Y)
regression<-lm(Y~fit$Y)
summ<-summary(regression)
b<-as.data.frame(cbind(Y,fit$Y))
names(b)<-c("Obs","Est")
b$density<-get_density(b$Est, b$Obs, n = 75)
plot<-ggplot(data=b,aes(x=Est,y=Obs))+
#geom_point()+
geom_pointdensity(adjust=0.2)+
scale_color_viridis(name="Density")+
geom_smooth(method='lm', formula= y~x,col="red")+
scale_x_continuous(name=paste0("Estimated ", sp, " (ug/",expression(m^3),")"))+
scale_y_continuous(name=paste0("Observed ", sp))+
theme(panel.background = element_blank(),
axis.line = element_line())+
stat_poly_eq(formula = y~x,
eq.with.lhs = "italic(hat(y))~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE)
print(plot)
plot_list[[i]]<-plot
}
plot_list<-list()
for (i in 1:5){
sp<-species[i]
load(paste0("F:/Emory/LiuGroup/WRF/Model fit/FitWRF_",sp,".RData"))
print(sp)
moni_pm<-paste0('moni_',sp)
Y = moni.subset[,moni_pm]
maxY<-max(Y)
maxFitY<-max(fit$Y)
regression<-lm(Y~fit$Y)
summ<-summary(regression)
b<-as.data.frame(cbind(Y,fit$Y))
names(b)<-c("Obs","Est")
b$density<-get_density(b$Est, b$Obs, n = 75)
plot<-ggplot(data=b,aes(x=Est,y=Obs))+
#geom_point()+
geom_pointdensity(adjust=0.2)+
scale_color_viridis(name="Density")+
geom_smooth(method='lm', formula= y~x,col="red")+
scale_x_continuous(name=expression(paste0("Estimated ", sp, " (ug/",expression(m^3),")")))+
scale_y_continuous(name=paste0("Observed ", sp))+
theme(panel.background = element_blank(),
axis.line = element_line())+
stat_poly_eq(formula = y~x,
eq.with.lhs = "italic(hat(y))~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE)
print(plot)
plot_list[[i]]<-plot
}
plot_list<-list()
for (i in 1:5){
sp<-species[i]
load(paste0("F:/Emory/LiuGroup/WRF/Model fit/FitWRF_",sp,".RData"))
print(sp)
moni_pm<-paste0('moni_',sp)
Y = moni.subset[,moni_pm]
maxY<-max(Y)
maxFitY<-max(fit$Y)
regression<-lm(Y~fit$Y)
summ<-summary(regression)
b<-as.data.frame(cbind(Y,fit$Y))
names(b)<-c("Obs","Est")
b$density<-get_density(b$Est, b$Obs, n = 75)
plot<-ggplot(data=b,aes(x=Est,y=Obs))+
#geom_point()+
geom_pointdensity(adjust=0.2)+
scale_color_viridis(name="Density")+
geom_smooth(method='lm', formula= y~x,col="red")+
scale_x_continuous(name=expression( paste("Estimated ", sp, " (ug/",expression(m^3),")")))+
scale_y_continuous(name=paste0("Observed ", sp))+
theme(panel.background = element_blank(),
axis.line = element_line())+
stat_poly_eq(formula = y~x,
eq.with.lhs = "italic(hat(y))~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE)
print(plot)
plot_list[[i]]<-plot
}
plot<-ggplot(data=b,aes(x=Est,y=Obs))+
#geom_point()+
geom_pointdensity(adjust=0.2)+
scale_color_viridis(name="Density")+
geom_smooth(method='lm', formula= y~x,col="red")+
scale_x_continuous(name=expression( paste("Estimated ", sp, " (ug/",m^3,")")))+
scale_y_continuous(name=paste0("Observed ", sp))+
theme(panel.background = element_blank(),
axis.line = element_line())+
stat_poly_eq(formula = y~x,
eq.with.lhs = "italic(hat(y))~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE)
print(plot)
?expression
plot<-ggplot(data=b,aes(x=Est,y=Obs))+
#geom_point()+
geom_pointdensity(adjust=0.2)+
scale_color_viridis(name="Density")+
geom_smooth(method='lm', formula= y~x,col="red")+
scale_x_continuous(name=paste0("Estimated ", sp, expression(" (ug/",m^3,")")))+
scale_y_continuous(name=paste0("Observed ", sp))+
theme(panel.background = element_blank(),
axis.line = element_line())+
stat_poly_eq(formula = y~x,
eq.with.lhs = "italic(hat(y))~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE)
print(plot)
plot<-ggplot(data=b,aes(x=Est,y=Obs))+
#geom_point()+
geom_pointdensity(adjust=0.2)+
scale_color_viridis(name="Density")+
geom_smooth(method='lm', formula= y~x,col="red")+
scale_x_continuous(name=paste0("Estimated ", sp," (ug/", expression(m^3),")"))+
scale_y_continuous(name=paste0("Observed ", sp))+
theme(panel.background = element_blank(),
axis.line = element_line())+
stat_poly_eq(formula = y~x,
eq.with.lhs = "italic(hat(y))~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE)
print(plot)
month="06"
print(month)
wrf_all<-read.csv(paste0('F:/Emory/LiuGroup/WRF/Monitor Data/Wrf_pm25_species/wrf_pm25species_2018',month,'.csv'))
monprint('data loaded')
wrf_all<-wrf_all[order(wrf_all$wrf_lon,wrf_all$wrf_lat), ]
wrf_all<-wrf_all[sample(nrow(wrf_all)),]
wrf_all$doy <- as.numeric(as.Date(wrf_all$wrf_date)-as.Date("2018-01-01"))+1
wrf_all$wrf_lon<-round(wrf_all$wrf_lon,4)
wrf_all$wrf_lat<-round(wrf_all$wrf_lat,4)
wrf_all$GridId<-paste0(wrf_all$wrf_lon,"/",wrf_all$wrf_lat)
grids<-unique(as.data.frame(cbind(wrf_all$wrf_lon,wrf_all$wrf_lat,wrf_all$GridId)))
sum(wrf_all$GridId %in% grids$V3)
k<-kfold(nrow(grids),4)
wrf_sub_new<-NULL
for(foldi in 1:4){
grids_fold<-grids[which(k==foldi),3]
wrf_fold<-wrf_all[which(wrf_all$GridId %in% grids_fold),]
wrf_lalo<-unique(wrf_fold[c("wrf_lon","wrf_lat")])
print('unique')
wrf_lalo<-wrf_lalo[order(wrf_lalo$wrf_lon,wrf_lalo$wrf_lat), ]
print('order')
wrf_lalo$wrf_id<-seq(1,nrow(wrf_lalo))
wrf_fold<-merge(wrf_fold, wrf_lalo, by=c("wrf_lon","wrf_lat"),all.x=TRUE)
print('merge')
wrf_fold <- wrf_fold[order(wrf_fold$doy, wrf_fold$wrf_id),]
print('order')
Z.pred = NULL
Space.ID.pred = wrf_fold$wrf_id
Time.ID.pred = wrf_fold$doy
N.loc = nrow(wrf_lalo)
#Dist.mat = matrix(NA, ncol=N.loc, nrow=N.loc)
Dist.mat<-NULL
Coord.pred = wrf_lalo[c('wrf_lon', 'wrf_lat')]
wrf_sub_new<-rbind(wrf_sub_new,wrf_fold)
}
library(lubridate)
k<-kfold(nrow(grids),4)
library(dismo)
k<-kfold(nrow(grids),4)
wrf_sub_new<-NULL
for(foldi in 1:4){
grids_fold<-grids[which(k==foldi),3]
wrf_fold<-wrf_all[which(wrf_all$GridId %in% grids_fold),]
wrf_lalo<-unique(wrf_fold[c("wrf_lon","wrf_lat")])
print('unique')
wrf_lalo<-wrf_lalo[order(wrf_lalo$wrf_lon,wrf_lalo$wrf_lat), ]
print('order')
wrf_lalo$wrf_id<-seq(1,nrow(wrf_lalo))
wrf_fold<-merge(wrf_fold, wrf_lalo, by=c("wrf_lon","wrf_lat"),all.x=TRUE)
print('merge')
wrf_fold <- wrf_fold[order(wrf_fold$doy, wrf_fold$wrf_id),]
print('order')
Z.pred = NULL
Space.ID.pred = wrf_fold$wrf_id
Time.ID.pred = wrf_fold$doy
N.loc = nrow(wrf_lalo)
#Dist.mat = matrix(NA, ncol=N.loc, nrow=N.loc)
Dist.mat<-NULL
Coord.pred = wrf_lalo[c('wrf_lon', 'wrf_lat')]
wrf_sub_new<-rbind(wrf_sub_new,wrf_fold)
}
wrf_sub_new<-NULL
for(foldi in 1:4){
grids_fold<-grids[which(k==foldi),3]
wrf_fold<-wrf_all[which(wrf_all$GridId %in% grids_fold),]
wrf_lalo<-unique(wrf_fold[c("wrf_lon","wrf_lat")])
print('unique')
wrf_lalo<-wrf_lalo[order(wrf_lalo$wrf_lon,wrf_lalo$wrf_lat), ]
print('order')
wrf_lalo$wrf_id<-seq(1,nrow(wrf_lalo))
wrf_fold<-merge(wrf_fold, wrf_lalo, by=c("wrf_lon","wrf_lat"),all.x=TRUE)
print('merge')
wrf_fold <- wrf_fold[order(wrf_fold$doy, wrf_fold$wrf_id),]
print('order')
Z.pred = NULL
Space.ID.pred = wrf_fold$wrf_id
Time.ID.pred = wrf_fold$doy
N.loc = nrow(wrf_lalo)
#Dist.mat = matrix(NA, ncol=N.loc, nrow=N.loc)
Dist.mat<-NULL
Coord.pred = wrf_lalo[c('wrf_lon', 'wrf_lat')]
wrf_sub_new<-rbind(wrf_sub_new,wrf_fold)
}
str(wrf_sub_hnew)
str(wrf_sub_new)
wrf_sub_new[which(wrf_sub_new$wrf_date==wrf_sub_new$wrf_date[1]),]
aK<-wrf_sub_new[which(wrf_sub_new$wrf_date==wrf_sub_new$wrf_date[1]),]
View(aK)
b<-wrf_all[which(wrf_all$wrf_date==wrf_all$wrf_date[1]),]
a<-wrf_sub_new[which(wrf_sub_new$wrf_date==wrf_sub_new$wrf_date[1]),]
b<-wrf_all[which(wrf_all$wrf_date==wrf_all$wrf_date[1]),]
View(b)
View(wrf_lalo)
library(readr)
C <- read_csv("C:/Users/59392/Desktop/wrf_pm25species_20182018-06-01_valid_3.csv")
library(readr)
d <- read_csv("C:/Users/59392/Desktop/wrf_pm25species_20182018-06-01_valid_4fold.csv")
?coordinates
library(ncdf4)
library(lubridate)
library(lattice)
library(latticeExtra)
library(raster)
library(rasterVis)
library(rgdal)
library(tmap)
library(tmaptools)
?coordinates
doy_list<-c(paste0("00",1:9),paste0("0",10:99),paste0(100:365))
doy_list
doy_list<-c(paste0("00",1:9),paste0("0",10:99),paste0(100:365))
lubridate::month(as.numeric(doy_list)+as.Date("2017-12-31"))
month_list<-lubridate::month(as.numeric(doy_list)+as.Date("2017-12-31"))
doy_list<-c(paste0("00",1:9),paste0("0",10:99),paste0(100:365))
month_list<-lubridate::month(as.numeric(doy_list)+as.Date("2017-12-31"))
season_monthlist<-season_month[[i]]
spring<-c(3:5)
summer<-c(6:8)
autumn<-c(9:11)
winter<-c(1,2,12)
season_month<-list(spring,summer,autumn,winter)
doy_list<-c(paste0("00",1:9),paste0("0",10:99),paste0(100:365))
month_list<-lubridate::month(as.numeric(doy_list)+as.Date("2017-12-31"))
season_monthlist<-season_month[[i]]
i=1
season_month<-list(spring,summer,autumn,winter)
doy_list<-c(paste0("00",1:9),paste0("0",10:99),paste0(100:365))
month_list<-lubridate::month(as.numeric(doy_list)+as.Date("2017-12-31"))
season_monthlist<-season_month[[i]]
season_monthlist
source('~/.active-rstudio-document', echo=TRUE)
doy_season<-doy_list[which(month_list %in% season_monthlist)]
doy_season
pt(2.582,14)
pt(2.582,14)-1
pt(-1.442,14)
1-pt(-1.442,14)
qnorm(0.8)
qnorm(1.96)
qnorm(1.95)
qnorm(0.95)
qnorm(0.975)
qnorm(0.9995)
qnorm(0.995)
qnorm(0.8)
pnorm(2.454)
diff<-c(1:10)
qnorm(0.975)
qnorm(0.80)
samplesize<-(1.95+0.842)*81/diff/diff
samplesize<-((1.95+0.842)^2)*81
samplesize<-((1.95+0.842)^2)*81/diff
diff<-c(1:10)
samplesize<-NULL
for(diff in 1:10){
samplesize<-c(samplesize,((1.95+0.842)^2)*81/diff)
}
samplesize
diff<-c(1:10)
samplesize<-NULL
for(diff in 1:10){
samplesize<-c(samplesize,((1.95+0.842)^2)*81/diff/diff)
}
samplesize
a<-cbind(diff,samplesize)
a
diff<-c(1:10)
samplesize<-NULL
for(diff in 1:10){
samplesize<-c(samplesize,((1.96+0.842)^2)*81/diff/diff)
}
samplesize
a<-cbind(diff,samplesize)
a
a<-as.data.frame(a)
a$samplesize<-ceiling(a$samplesize)
a
diff<-c(1:10)
a<-cbind(diff,samplesize)
a<-as.data.frame(a)
a$samplesize<-ceiling(a$samplesize)
a
diff<-c(1:10)
samplesize<-NULL
diff<-c(1:10)
samplesize<-NULL
for(diffi in 1:10){
samplesize<-c(samplesize,((1.96+0.842)^2)*81/diffi/diffi)
}
samplesize
a<-cbind(diff,samplesize)
a<-as.data.frame(a)
a$samplesize<-ceiling(a$samplesize)
a
pnorm(1.693)
pnorm(1.693)-1
pnorm(0.833)-1
qnorm(0.91)
qnorm(0.9)
pbinom(q = 6,size = 20,prob = 0.12)
pbinom(q = 5,size = 20,prob = 0.12,lower.tail = T)
pbinom(q = 5,size = 20,prob = 0.12,lower.tail = f)
pbinom(q = 5,size = 20,prob = 0.12,lower.tail = F)
pbinom(q = 4,size = 20,prob = 0.12,lower.tail = F)
pbinom(0.95,20)
pbinom(0.95,20,5)
pbinom(0.95,20,5,lower.tail = =F)
pbinom(0.95,20,5,lower.tail=F)
qbinom(0.95,20,5,lower.tail=F)
pbinom(0.95,20,5,lower.tail=F)
qbinom(0.95,20,0.12)
qbinom(0.95,20,0.11)
qbinom(0.95,20,0.10)
for(p in seq(0.10,0.11,length.out = 100)){
print(p)
}
for(p in seq(0.10,0.11,length.out = 99)){
print(p)
}
for(p in seq(0.10,0.11,length.out = 101)){
print(p)
}
for(p in seq(0.10,0.11,length.out = 101)){
print(p)
qbinom(0.95,20,p)
}
for(p in seq(0.10,0.11,length.out = 101)){
print(p)
print(qbinom(0.95,20,p))
}
for(p in seq(0.10,0.11,length.out = 101)){
print(p)
print(qbinom(0.80,20,p))
}
for(p in seq(0.10,0.40,length.out = 101)){
print(p)
print(qbinom(0.80,20,p))
}
for(p in seq(0.10,0.40,length.out = 101)){
print(p)
print(1-qbinom(0.80,20,p))
}
print(pbinom(4,20,p))
for(p in seq(0.10,0.40,length.out = 101)){
print(p)
print(pbinom(4,20,p))
}
for(p in seq(0.10,0.40,length.out = 101)){
print(paste0("p=",p))
print(pbinom(4,20,p))
}
for(p in seq(0.10,0.40,length.out = 101)){
print(paste0("p=",p))
print(pbinom(6,20,p))
}
for(p in seq(0.20,0.50,length.out = 101)){
print(paste0("p=",p))
print(pbinom(6,20,p))
}
for(p in seq(0.20,0.50,length.out = 101)){
print(paste0("p=",p))
print(pbinom(6,20,p,lower.tail = F))
}
for(p in seq(0.416,0.419,length.out = 101)){
print(paste0("p=",p))
print(pbinom(6,20,p,lower.tail = F))
}
library(reshape2)
library(lubridate)
library(raster)
here::i_am("Rcode/cleandata.R")
###load_combine_data
filepath<-here::here("data/GOES_data/")
file_list<-dir(filepath,pattern = ".csv")
daily_data<-NULL
for(filei in file_list){
GOES_nyc<-read.csv(paste0(filepath,"/",filei))
GOES_nyc<-na.omit(GOES_nyc)
daily_data<-rbind(daily_data,GOES_nyc)
}
str(daily_data)
###calculate hourly AOD
#calculate the hourly AOD based on the 5-minute AOD data for each point.
daily_data<-as.data.frame(daily_data)
daily_data.dcast<-dcast(daily_data,lon+lat~hour,mean,value.var = "AOD",na.rm=T)
#turn NAN into NA
for(coli in 1:ncol(daily_data.dcast)){
daily_data.dcast[is.nan(daily_data.dcast[,coli]),coli]<-NA
daily_data.dcast[,coli]<-as.numeric(daily_data.dcast[,coli])
}
setwd("C:/Users/59392/OneDrive - Emory University/Emory/Classes/2021 fall/INFO 550/info550")
here::i_am("Rcode/cleandata.R")
###load_combine_data
filepath<-here::here("data/GOES_data/")
file_list<-dir(filepath,pattern = ".csv")
daily_data<-NULL
for(filei in file_list){
GOES_nyc<-read.csv(paste0(filepath,"/",filei))
GOES_nyc<-na.omit(GOES_nyc)
daily_data<-rbind(daily_data,GOES_nyc)
}
str(daily_data)
###calculate hourly AOD
#calculate the hourly AOD based on the 5-minute AOD data for each point.
daily_data<-as.data.frame(daily_data)
daily_data.dcast<-dcast(daily_data,lon+lat~hour,mean,value.var = "AOD",na.rm=T)
#turn NAN into NA
for(coli in 1:ncol(daily_data.dcast)){
daily_data.dcast[is.nan(daily_data.dcast[,coli]),coli]<-NA
daily_data.dcast[,coli]<-as.numeric(daily_data.dcast[,coli])
}
#change column name into form day_h_hour
names(daily_data.dcast)[3:ncol(daily_data.dcast)]<-paste0("day001_h_",names(daily_data.dcast)[3:ncol(daily_data.dcast)])
daily_data.dcast
View(daily_data.dcast)
daily_data.dcast
daily_data.dcast$mean<-rowMeans(daily_data.dcast[,3:ncol(daily_data.dcast)])
daily_data.dcast$mean<-rowMeans(daily_data.dcast[,3:ncol(daily_data.dcast)],na.rm=TRUE)
#save results
save(daily_data.dcast,file=here::here("Output/cleandata.RData"))
library(raster)
library(rasterVis)
library(animation)
here::i_am("Rcode/make_figure.R")
# load shapefile for US states
load(here::here("Output/cleandata.RData"))
# load shapefile for US states
load(here::here("Output/cleandata.RData"))
library(ggplot2)
names(daily_data.dcast)
# create figure showing AOD distribution in the north-east US on day 2018-01-01
p<-ggplot(data=daily_data.dcast,aes(x=lon,y=lat,color=mean))+
geom_point()
plot(p)
tiff(filename = here::here("Output/figure/aod_figure.tiff"),width = 6,height = 6,res = 200)
tiff(file = here::here("Output/figure/aod_figure.tiff"),
width =7,height = 5,units="in",res = 200)
plot(p)
dev.off()
setwd("C:/Users/59392/OneDrive - Emory University/Emory/Classes/2021 fall/INFO 550/info550")
